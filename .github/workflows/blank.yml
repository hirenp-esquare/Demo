# This is a basic workflow to help you get started with Actions

name: ActionChecker

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
     # - "[Ff]eature-*" 
    paths:
    - '**.md'
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ActionChecker:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        fetch-depth: "0"
    
    - name: '' #get changed files
      id: getfile
      run: |
        echo "::set-output name=files::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | xargs)"
    
    - name: '' #get changed files
      id: getDirName
      run: |
        echo "::set-output name=dirs::$(dirname ${{ steps.getfile.outputs.files }})"
    
    #- name: echo output
      #run: |
        #echo ${{ steps.getfile.outputs.files }}
        #echo ${{ steps.getDirName.outputs.dirs }}
    
   
                
    - name: Markdown Linter
      if: always()  
      uses: ruzickap/action-my-markdown-linter@v0.0.1
      with:
        # markdownlint config file
        config_file: .github/workflows/markdownlint.json # optional
        # Debug mode
        #debug: # optional
        # Exclude files or directories
        #exclude: # optional
        # Command line parameters for fd command. "exclude" and "search_paths" parameters are ignored if this is set
        fd_cmd_params: "fd . -0 --extension md --type f --hidden --no-ignore ${{ steps.getDirName.outputs.dirs }}" # optional
        # Set paths which should be recursively scanned for markdown files (*.md) and linted. By default all "*.md" files are checked
        #search_paths: ${{ steps.getDirName.outputs.dirs }} # optional
   
          
   
        
        
        
       
   

   
